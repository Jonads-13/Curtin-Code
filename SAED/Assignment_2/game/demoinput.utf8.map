size (10,10)
start (5,0)
goal (1,0)

plugin edu.curtin.gameplugins.Teleport

item  "broken white map|+"    {
at
   (  9   ,  0
) , (5,4), (2,3)  message   "?NbS+QZd"} obstacle {
  at (8,0), (2,0)
  requires "sentient red boot", "broken white map|+"
}

item "sentient red boot" {
  at (3,0), (1,1), (0,0)
  message "Haq*p"
}

plugin edu.curtin.gameplugins.Prize

script !{
from edu.curtin.saed_assignment2.api.handlers import PlayerHandler
from edu.curtin.saed_assignment2.api.model import Obstacle
import time

print("Loading penalty script...")
current = time.time() * 1000
class Penalty(PlayerHandler):
    def takeAction(self, didAction, prevLocation, newLocation):
        global current
        if ((time.time() * 1000) - current) > 5000 :
            prevRow = prevLocation[0]
            prevCol = prevLocation[1]
            penalty_obstacle = Obstacle(prevRow, prevCol, ["Unobtanium"])
            penalty_obstacle.setVisibility(True);
            api.setMapCell(penalty_obstacle, prevRow, prevCol)

        current = time.time() * 1000
        
penalty = Penalty()
api.registerPlayerHandler(penalty)
print("Penalty script loaded")
}

script !{
from edu.curtin.saed_assignment2.api.handlers import InventoryHandler
from edu.curtin.saed_assignment2.api.model import Goal, Item
import unicodedata

print("Loading reveal script...")
class Reveal(InventoryHandler):
    def takeAction(self, item):
        name = unicodedata.normalize("NFC", item.getName())
        map_upper = unicodedata.normalize("NFC", "Map")
        map_lower = unicodedata.normalize("NFC", "map")
        if map_upper in name or map_lower in name:
            print("Map acquired, revealing hidden mysteries...")
            map = api.getMap()
            for row in map:
                for cell in row:
                    # Only show the goal and items, not obstacles
                    if isinstance(cell, Goal) or isinstance(cell, Item):
                        cell.setVisibility(True)
            
reveal = Reveal()
api.registerInventoryHandler(reveal)
print("Reveal script loaded")
}

